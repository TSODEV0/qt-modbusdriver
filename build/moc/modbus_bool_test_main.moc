/****************************************************************************
** Meta object code from reading C++ file 'modbus_bool_test_main.cpp'
**
** Created by: The Qt Meta Object Compiler version 68 (Qt 6.6.3)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qmetatype.h>

#if __has_include(<QtCore/qtmochelpers.h>)
#include <QtCore/qtmochelpers.h>
#else
QT_BEGIN_MOC_NAMESPACE
#endif


#include <memory>

#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'modbus_bool_test_main.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 68
#error "This file was generated using the moc from 6.6.3. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

#ifndef Q_CONSTINIT
#define Q_CONSTINIT
#endif

QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
QT_WARNING_DISABLE_GCC("-Wuseless-cast")
namespace {

#ifdef QT_MOC_HAS_STRINGDATA
struct qt_meta_stringdata_CLASSTestRunnerENDCLASS_t {};
constexpr auto qt_meta_stringdata_CLASSTestRunnerENDCLASS = QtMocHelpers::stringData(
    "TestRunner",
    "runTest",
    "",
    "onTestStarted",
    "onTestCompleted",
    "onTestProgress",
    "current",
    "total",
    "onAddressTestCompleted",
    "DiscreteInputTestResult",
    "result",
    "onErrorOccurred",
    "error"
);
#else  // !QT_MOC_HAS_STRING_DATA
struct qt_meta_stringdata_CLASSTestRunnerENDCLASS_t {
    uint offsetsAndSizes[26];
    char stringdata0[11];
    char stringdata1[8];
    char stringdata2[1];
    char stringdata3[14];
    char stringdata4[16];
    char stringdata5[15];
    char stringdata6[8];
    char stringdata7[6];
    char stringdata8[23];
    char stringdata9[24];
    char stringdata10[7];
    char stringdata11[16];
    char stringdata12[6];
};
#define QT_MOC_LITERAL(ofs, len) \
    uint(sizeof(qt_meta_stringdata_CLASSTestRunnerENDCLASS_t::offsetsAndSizes) + ofs), len 
Q_CONSTINIT static const qt_meta_stringdata_CLASSTestRunnerENDCLASS_t qt_meta_stringdata_CLASSTestRunnerENDCLASS = {
    {
        QT_MOC_LITERAL(0, 10),  // "TestRunner"
        QT_MOC_LITERAL(11, 7),  // "runTest"
        QT_MOC_LITERAL(19, 0),  // ""
        QT_MOC_LITERAL(20, 13),  // "onTestStarted"
        QT_MOC_LITERAL(34, 15),  // "onTestCompleted"
        QT_MOC_LITERAL(50, 14),  // "onTestProgress"
        QT_MOC_LITERAL(65, 7),  // "current"
        QT_MOC_LITERAL(73, 5),  // "total"
        QT_MOC_LITERAL(79, 22),  // "onAddressTestCompleted"
        QT_MOC_LITERAL(102, 23),  // "DiscreteInputTestResult"
        QT_MOC_LITERAL(126, 6),  // "result"
        QT_MOC_LITERAL(133, 15),  // "onErrorOccurred"
        QT_MOC_LITERAL(149, 5)   // "error"
    },
    "TestRunner",
    "runTest",
    "",
    "onTestStarted",
    "onTestCompleted",
    "onTestProgress",
    "current",
    "total",
    "onAddressTestCompleted",
    "DiscreteInputTestResult",
    "result",
    "onErrorOccurred",
    "error"
};
#undef QT_MOC_LITERAL
#endif // !QT_MOC_HAS_STRING_DATA
} // unnamed namespace

Q_CONSTINIT static const uint qt_meta_data_CLASSTestRunnerENDCLASS[] = {

 // content:
      12,       // revision
       0,       // classname
       0,    0, // classinfo
       6,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags, initial metatype offsets
       1,    0,   50,    2, 0x0a,    1 /* Public */,
       3,    0,   51,    2, 0x08,    2 /* Private */,
       4,    0,   52,    2, 0x08,    3 /* Private */,
       5,    2,   53,    2, 0x08,    4 /* Private */,
       8,    1,   58,    2, 0x08,    7 /* Private */,
      11,    1,   61,    2, 0x08,    9 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, QMetaType::Int, QMetaType::Int,    6,    7,
    QMetaType::Void, 0x80000000 | 9,   10,
    QMetaType::Void, QMetaType::QString,   12,

       0        // eod
};

Q_CONSTINIT const QMetaObject TestRunner::staticMetaObject = { {
    QMetaObject::SuperData::link<QObject::staticMetaObject>(),
    qt_meta_stringdata_CLASSTestRunnerENDCLASS.offsetsAndSizes,
    qt_meta_data_CLASSTestRunnerENDCLASS,
    qt_static_metacall,
    nullptr,
    qt_incomplete_metaTypeArray<qt_meta_stringdata_CLASSTestRunnerENDCLASS_t,
        // Q_OBJECT / Q_GADGET
        QtPrivate::TypeAndForceComplete<TestRunner, std::true_type>,
        // method 'runTest'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'onTestStarted'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'onTestCompleted'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'onTestProgress'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<int, std::false_type>,
        QtPrivate::TypeAndForceComplete<int, std::false_type>,
        // method 'onAddressTestCompleted'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<const DiscreteInputTestResult &, std::false_type>,
        // method 'onErrorOccurred'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<const QString &, std::false_type>
    >,
    nullptr
} };

void TestRunner::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<TestRunner *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->runTest(); break;
        case 1: _t->onTestStarted(); break;
        case 2: _t->onTestCompleted(); break;
        case 3: _t->onTestProgress((*reinterpret_cast< std::add_pointer_t<int>>(_a[1])),(*reinterpret_cast< std::add_pointer_t<int>>(_a[2]))); break;
        case 4: _t->onAddressTestCompleted((*reinterpret_cast< std::add_pointer_t<DiscreteInputTestResult>>(_a[1]))); break;
        case 5: _t->onErrorOccurred((*reinterpret_cast< std::add_pointer_t<QString>>(_a[1]))); break;
        default: ;
        }
    }
}

const QMetaObject *TestRunner::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TestRunner::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_CLASSTestRunnerENDCLASS.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int TestRunner::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 6)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 6;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 6)
            *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType();
        _id -= 6;
    }
    return _id;
}
QT_WARNING_POP
