/****************************************************************************
** Meta object code from reading C++ file 'modbus_test_server.cpp'
**
** Created by: The Qt Meta Object Compiler version 68 (Qt 6.6.3)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qmetatype.h>

#if __has_include(<QtCore/qtmochelpers.h>)
#include <QtCore/qtmochelpers.h>
#else
QT_BEGIN_MOC_NAMESPACE
#endif


#include <memory>

#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'modbus_test_server.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 68
#error "This file was generated using the moc from 6.6.3. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

#ifndef Q_CONSTINIT
#define Q_CONSTINIT
#endif

QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
QT_WARNING_DISABLE_GCC("-Wuseless-cast")
namespace {

#ifdef QT_MOC_HAS_STRINGDATA
struct qt_meta_stringdata_CLASSModbusTestServerENDCLASS_t {};
constexpr auto qt_meta_stringdata_CLASSModbusTestServerENDCLASS = QtMocHelpers::stringData(
    "ModbusTestServer",
    "updateSimulatedData",
    "",
    "onDataWritten",
    "QModbusDataUnit::RegisterType",
    "table",
    "address",
    "size",
    "onStateChanged",
    "QModbusDevice::State",
    "state",
    "onErrorOccurred",
    "QModbusDevice::Error",
    "error"
);
#else  // !QT_MOC_HAS_STRING_DATA
struct qt_meta_stringdata_CLASSModbusTestServerENDCLASS_t {
    uint offsetsAndSizes[28];
    char stringdata0[17];
    char stringdata1[20];
    char stringdata2[1];
    char stringdata3[14];
    char stringdata4[30];
    char stringdata5[6];
    char stringdata6[8];
    char stringdata7[5];
    char stringdata8[15];
    char stringdata9[21];
    char stringdata10[6];
    char stringdata11[16];
    char stringdata12[21];
    char stringdata13[6];
};
#define QT_MOC_LITERAL(ofs, len) \
    uint(sizeof(qt_meta_stringdata_CLASSModbusTestServerENDCLASS_t::offsetsAndSizes) + ofs), len 
Q_CONSTINIT static const qt_meta_stringdata_CLASSModbusTestServerENDCLASS_t qt_meta_stringdata_CLASSModbusTestServerENDCLASS = {
    {
        QT_MOC_LITERAL(0, 16),  // "ModbusTestServer"
        QT_MOC_LITERAL(17, 19),  // "updateSimulatedData"
        QT_MOC_LITERAL(37, 0),  // ""
        QT_MOC_LITERAL(38, 13),  // "onDataWritten"
        QT_MOC_LITERAL(52, 29),  // "QModbusDataUnit::RegisterType"
        QT_MOC_LITERAL(82, 5),  // "table"
        QT_MOC_LITERAL(88, 7),  // "address"
        QT_MOC_LITERAL(96, 4),  // "size"
        QT_MOC_LITERAL(101, 14),  // "onStateChanged"
        QT_MOC_LITERAL(116, 20),  // "QModbusDevice::State"
        QT_MOC_LITERAL(137, 5),  // "state"
        QT_MOC_LITERAL(143, 15),  // "onErrorOccurred"
        QT_MOC_LITERAL(159, 20),  // "QModbusDevice::Error"
        QT_MOC_LITERAL(180, 5)   // "error"
    },
    "ModbusTestServer",
    "updateSimulatedData",
    "",
    "onDataWritten",
    "QModbusDataUnit::RegisterType",
    "table",
    "address",
    "size",
    "onStateChanged",
    "QModbusDevice::State",
    "state",
    "onErrorOccurred",
    "QModbusDevice::Error",
    "error"
};
#undef QT_MOC_LITERAL
#endif // !QT_MOC_HAS_STRING_DATA
} // unnamed namespace

Q_CONSTINIT static const uint qt_meta_data_CLASSModbusTestServerENDCLASS[] = {

 // content:
      12,       // revision
       0,       // classname
       0,    0, // classinfo
       4,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags, initial metatype offsets
       1,    0,   38,    2, 0x08,    1 /* Private */,
       3,    3,   39,    2, 0x08,    2 /* Private */,
       8,    1,   46,    2, 0x08,    6 /* Private */,
      11,    1,   49,    2, 0x08,    8 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void, 0x80000000 | 4, QMetaType::Int, QMetaType::Int,    5,    6,    7,
    QMetaType::Void, 0x80000000 | 9,   10,
    QMetaType::Void, 0x80000000 | 12,   13,

       0        // eod
};

Q_CONSTINIT const QMetaObject ModbusTestServer::staticMetaObject = { {
    QMetaObject::SuperData::link<QObject::staticMetaObject>(),
    qt_meta_stringdata_CLASSModbusTestServerENDCLASS.offsetsAndSizes,
    qt_meta_data_CLASSModbusTestServerENDCLASS,
    qt_static_metacall,
    nullptr,
    qt_incomplete_metaTypeArray<qt_meta_stringdata_CLASSModbusTestServerENDCLASS_t,
        // Q_OBJECT / Q_GADGET
        QtPrivate::TypeAndForceComplete<ModbusTestServer, std::true_type>,
        // method 'updateSimulatedData'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'onDataWritten'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<QModbusDataUnit::RegisterType, std::false_type>,
        QtPrivate::TypeAndForceComplete<int, std::false_type>,
        QtPrivate::TypeAndForceComplete<int, std::false_type>,
        // method 'onStateChanged'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<QModbusDevice::State, std::false_type>,
        // method 'onErrorOccurred'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<QModbusDevice::Error, std::false_type>
    >,
    nullptr
} };

void ModbusTestServer::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<ModbusTestServer *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->updateSimulatedData(); break;
        case 1: _t->onDataWritten((*reinterpret_cast< std::add_pointer_t<QModbusDataUnit::RegisterType>>(_a[1])),(*reinterpret_cast< std::add_pointer_t<int>>(_a[2])),(*reinterpret_cast< std::add_pointer_t<int>>(_a[3]))); break;
        case 2: _t->onStateChanged((*reinterpret_cast< std::add_pointer_t<QModbusDevice::State>>(_a[1]))); break;
        case 3: _t->onErrorOccurred((*reinterpret_cast< std::add_pointer_t<QModbusDevice::Error>>(_a[1]))); break;
        default: ;
        }
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        switch (_id) {
        default: *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType(); break;
        case 1:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType(); break;
            case 0:
                *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType::fromType< QModbusDataUnit::RegisterType >(); break;
            }
            break;
        }
    }
}

const QMetaObject *ModbusTestServer::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *ModbusTestServer::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_CLASSModbusTestServerENDCLASS.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int ModbusTestServer::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 4)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 4;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 4)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 4;
    }
    return _id;
}
QT_WARNING_POP
